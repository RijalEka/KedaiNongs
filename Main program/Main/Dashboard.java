/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import javax.swing.JOptionPane;
import pro.DatabaseConnection;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author LENOVO
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public static int loggedInKasirId;
    private Pesanan pesanan;

    public Dashboard(int loggedInKasirId, Pesanan pesanan) {
        initComponents();
        this.loggedInKasirId = loggedInKasirId;
        this.pesanan = pesanan;
        System.out.println("Dashboard menerima Pesanan dengan ID Kasir: " + loggedInKasirId);
        
        
        pesanan.loadDataFromDatabase();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        roundedPanel1 = new warna.RoundedPanel();
        iconlab = new javax.swing.JLabel();
        dashblab = new javax.swing.JLabel();
        pesanlab = new javax.swing.JLabel();
        riwlab = new javax.swing.JLabel();
        pemblab = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        makanan = new javax.swing.JPanel();
        rPaneldrink = new warna.RoundedPanel();
        jLabel7 = new javax.swing.JLabel();
        rPanelfood = new warna.RoundedPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        NasdukButton = new javax.swing.JButton();
        MieAButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        BaksoButton = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        GeprekButton = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        NasgorButton = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        SeblakButton = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        minuman = new javax.swing.JPanel();
        roundedPanel4 = new warna.RoundedPanel();
        jLabel9 = new javax.swing.JLabel();
        roundedPanel5 = new warna.RoundedPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        LemonTButton = new javax.swing.JButton();
        ESkopiButton = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        HotkopiButton = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        LemonSButton = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        SqueOrangButton = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        MilkshakeButton = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(243, 202, 82));

        roundedPanel1.setBackground(new java.awt.Color(255, 255, 255));

        iconlab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo_2.png"))); // NOI18N

        dashblab.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        dashblab.setForeground(new java.awt.Color(252, 82, 48));
        dashblab.setText("Dashboard");
        dashblab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashblabMouseClicked(evt);
            }
        });

        pesanlab.setForeground(new java.awt.Color(0, 0, 0));
        pesanlab.setText("Pesanan");
        pesanlab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pesanlabMouseClicked(evt);
            }
        });

        riwlab.setForeground(new java.awt.Color(0, 0, 0));
        riwlab.setText("Riwayat");
        riwlab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                riwlabMouseClicked(evt);
            }
        });

        pemblab.setForeground(new java.awt.Color(0, 0, 0));
        pemblab.setText("Pembayaran");
        pemblab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pemblabMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel1Layout = new javax.swing.GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(iconlab)
                .addGap(258, 258, 258)
                .addComponent(dashblab)
                .addGap(27, 27, 27)
                .addComponent(pesanlab)
                .addGap(28, 28, 28)
                .addComponent(riwlab)
                .addGap(27, 27, 27)
                .addComponent(pemblab)
                .addContainerGap(204, Short.MAX_VALUE))
        );
        roundedPanel1Layout.setVerticalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundedPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(iconlab))
                    .addGroup(roundedPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dashblab)
                            .addComponent(pesanlab)
                            .addComponent(riwlab)
                            .addComponent(pemblab))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 210));

        jPanel3.setBackground(new java.awt.Color(243, 202, 82));
        jPanel3.setLayout(new java.awt.CardLayout());

        makanan.setBackground(new java.awt.Color(243, 202, 82));

        rPaneldrink.setBackground(new java.awt.Color(217, 217, 217));
        rPaneldrink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rPaneldrinkMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Drink");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout rPaneldrinkLayout = new javax.swing.GroupLayout(rPaneldrink);
        rPaneldrink.setLayout(rPaneldrinkLayout);
        rPaneldrinkLayout.setHorizontalGroup(
            rPaneldrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rPaneldrinkLayout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(148, 148, 148))
        );
        rPaneldrinkLayout.setVerticalGroup(
            rPaneldrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rPaneldrinkLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(15, 15, 15))
        );

        rPanelfood.setBackground(new java.awt.Color(255, 255, 255));
        rPanelfood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rPanelfoodMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(252, 82, 48));
        jLabel6.setText("Food");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout rPanelfoodLayout = new javax.swing.GroupLayout(rPanelfood);
        rPanelfood.setLayout(rPanelfoodLayout);
        rPanelfoodLayout.setHorizontalGroup(
            rPanelfoodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rPanelfoodLayout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(149, 149, 149))
        );
        rPanelfoodLayout.setVerticalGroup(
            rPanelfoodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rPanelfoodLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(15, 15, 15))
        );

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nasduk.jpg"))); // NOI18N
        jLabel8.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/geprek.jpg"))); // NOI18N
        jLabel10.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Seblak.jpg"))); // NOI18N
        jLabel11.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bakso.jpg"))); // NOI18N
        jLabel12.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nasgor.jpg"))); // NOI18N
        jLabel13.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Nasi Uduk");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mieayam.jpg"))); // NOI18N
        jLabel15.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Rp. 10.000");

        NasdukButton.setBackground(new java.awt.Color(0, 160, 51));
        NasdukButton.setText("Tambah");
        NasdukButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NasdukButtonActionPerformed(evt);
            }
        });

        MieAButton.setBackground(new java.awt.Color(0, 160, 51));
        MieAButton.setText("Tambah");
        MieAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MieAButtonActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Rp. 13.000");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Mie Ayam");

        BaksoButton.setBackground(new java.awt.Color(0, 160, 51));
        BaksoButton.setText("Tambah");
        BaksoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaksoButtonActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Rp. 13.000");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Bakso");

        GeprekButton.setBackground(new java.awt.Color(0, 160, 51));
        GeprekButton.setText("Tambah");
        GeprekButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeprekButtonActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Rp. 15.000");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("Geprek");

        NasgorButton.setBackground(new java.awt.Color(0, 160, 51));
        NasgorButton.setText("Tambah");
        NasgorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NasgorButtonActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Rp. 15.000");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Nasi Goreng");

        SeblakButton.setBackground(new java.awt.Color(0, 160, 51));
        SeblakButton.setText("Tambah");
        SeblakButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeblakButtonActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Rp. 15.000");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Seblak");

        javax.swing.GroupLayout makananLayout = new javax.swing.GroupLayout(makanan);
        makanan.setLayout(makananLayout);
        makananLayout.setHorizontalGroup(
            makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makananLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(rPanelfood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makananLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makananLayout.createSequentialGroup()
                        .addComponent(rPaneldrink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makananLayout.createSequentialGroup()
                        .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makananLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16)
                                    .addComponent(NasdukButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(71, 71, 71)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel23)
                                    .addComponent(NasgorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel25)
                                    .addComponent(SeblakButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makananLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel17)
                                    .addComponent(MieAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(71, 71, 71)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel19)
                                    .addComponent(BaksoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel21)
                                    .addComponent(GeprekButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(47, 47, 47))))
        );
        makananLayout.setVerticalGroup(
            makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makananLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rPanelfood, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rPaneldrink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(makananLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NasgorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(makananLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SeblakButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(makananLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NasdukButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(makananLayout.createSequentialGroup()
                        .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(makananLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MieAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makananLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(makananLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BaksoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(makananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(makananLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GeprekButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(55, 55, 55))
        );

        jPanel3.add(makanan, "card2");

        minuman.setBackground(new java.awt.Color(243, 202, 82));
        minuman.setPreferredSize(new java.awt.Dimension(1000, 470));

        roundedPanel4.setBackground(new java.awt.Color(255, 255, 255));
        roundedPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roundedPanel4MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(252, 82, 48));
        jLabel9.setText("Drink");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel4Layout = new javax.swing.GroupLayout(roundedPanel4);
        roundedPanel4.setLayout(roundedPanel4Layout);
        roundedPanel4Layout.setHorizontalGroup(
            roundedPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel4Layout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(148, 148, 148))
        );
        roundedPanel4Layout.setVerticalGroup(
            roundedPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(15, 15, 15))
        );

        roundedPanel5.setBackground(new java.awt.Color(217, 217, 217));
        roundedPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roundedPanel5MouseClicked(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("Food");
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel5Layout = new javax.swing.GroupLayout(roundedPanel5);
        roundedPanel5.setLayout(roundedPanel5Layout);
        roundedPanel5Layout.setHorizontalGroup(
            roundedPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel5Layout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addGap(149, 149, 149))
        );
        roundedPanel5Layout.setVerticalGroup(
            roundedPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel5Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addGap(15, 15, 15))
        );

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/LemonTea.png"))); // NOI18N
        jLabel28.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/LemonSquash.png"))); // NOI18N
        jLabel29.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/MilkShake.png"))); // NOI18N
        jLabel30.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/HotCoffe.png"))); // NOI18N
        jLabel31.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/SqueezeOrange.png"))); // NOI18N
        jLabel32.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("Lemon Tea");

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/IcedCoffe.png"))); // NOI18N
        jLabel34.setPreferredSize(new java.awt.Dimension(190, 136));

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setText("Rp. 5.000");

        LemonTButton.setBackground(new java.awt.Color(0, 160, 51));
        LemonTButton.setText("Tambah");
        LemonTButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LemonTButtonActionPerformed(evt);
            }
        });

        ESkopiButton.setBackground(new java.awt.Color(0, 160, 51));
        ESkopiButton.setText("Tambah");
        ESkopiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ESkopiButtonActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("Rp. 7.000");

        jLabel37.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setText("Iced Coffee");

        HotkopiButton.setBackground(new java.awt.Color(0, 160, 51));
        HotkopiButton.setText("Tambah");
        HotkopiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HotkopiButtonActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 0, 0));
        jLabel38.setText("Rp. 7.000");

        jLabel39.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(0, 0, 0));
        jLabel39.setText("Hot Coffee");

        LemonSButton.setBackground(new java.awt.Color(0, 160, 51));
        LemonSButton.setText("Tambah");
        LemonSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LemonSButtonActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(0, 0, 0));
        jLabel40.setText("Rp. 15.000");

        jLabel41.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(0, 0, 0));
        jLabel41.setText("Lemon Squash");

        SqueOrangButton.setBackground(new java.awt.Color(0, 160, 51));
        SqueOrangButton.setText("Tambah");
        SqueOrangButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SqueOrangButtonActionPerformed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 0, 0));
        jLabel42.setText("Rp. 5.000");

        jLabel43.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 0));
        jLabel43.setText("Squeeze Orange");

        MilkshakeButton.setBackground(new java.awt.Color(0, 160, 51));
        MilkshakeButton.setText("Tambah");
        MilkshakeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MilkshakeButtonActionPerformed(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(0, 0, 0));
        jLabel44.setText("Rp. 10.000");

        jLabel45.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(0, 0, 0));
        jLabel45.setText("Milkshake");

        javax.swing.GroupLayout minumanLayout = new javax.swing.GroupLayout(minuman);
        minuman.setLayout(minumanLayout);
        minumanLayout.setHorizontalGroup(
            minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minumanLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(roundedPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(roundedPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minumanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(minumanLayout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel35)
                            .addComponent(LemonTButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(minumanLayout.createSequentialGroup()
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel36)
                            .addComponent(ESkopiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(71, 71, 71)
                .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(minumanLayout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43)
                            .addComponent(jLabel42)
                            .addComponent(SqueOrangButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(minumanLayout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39)
                            .addComponent(jLabel38)
                            .addComponent(HotkopiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(63, 63, 63)
                .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(minumanLayout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel45)
                            .addComponent(jLabel44)
                            .addComponent(MilkshakeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(minumanLayout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel40)
                            .addComponent(LemonSButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(42, 42, 42))
        );
        minumanLayout.setVerticalGroup(
            minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minumanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(roundedPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roundedPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minumanLayout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SqueOrangButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minumanLayout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MilkshakeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minumanLayout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LemonTButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(minumanLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minumanLayout.createSequentialGroup()
                                .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(minumanLayout.createSequentialGroup()
                                        .addComponent(jLabel39)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel38)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(HotkopiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(minumanLayout.createSequentialGroup()
                                        .addComponent(jLabel37)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel36)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ESkopiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(31, 31, 31))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minumanLayout.createSequentialGroup()
                                .addGroup(minumanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minumanLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LemonSButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );

        jPanel3.add(minuman, "card2");

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 1000, 470));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1014, 682));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NasdukButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NasdukButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 1; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);      
    }//GEN-LAST:event_NasdukButtonActionPerformed

    private void MieAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MieAButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 2; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_MieAButtonActionPerformed

    private void BaksoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaksoButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 4; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_BaksoButtonActionPerformed

    private void GeprekButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeprekButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 6; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_GeprekButtonActionPerformed

    private void NasgorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NasgorButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 3; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_NasgorButtonActionPerformed

    private void SeblakButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeblakButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 5; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_SeblakButtonActionPerformed

    private void LemonTButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LemonTButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 7; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_LemonTButtonActionPerformed

    private void ESkopiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ESkopiButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
         int idMenu = 8; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_ESkopiButtonActionPerformed

    private void HotkopiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HotkopiButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 10; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_HotkopiButtonActionPerformed

    private void LemonSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LemonSButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 12; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_LemonSButtonActionPerformed

    private void SqueOrangButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SqueOrangButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 9; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_SqueOrangButtonActionPerformed

    private void MilkshakeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MilkshakeButtonActionPerformed
        // TODO add your handling code here:
        // Ambil informasi menu dari database
        int idMenu = 11; // ID untuk menu Nasi Uduk
        String namaMenu = "";
        int harga = 0;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "SELECT Nama_Menu, harga FROM tabel_menu WHERE id_Menu = ?")) {
            pstmt.setInt(1, idMenu);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    namaMenu = rs.getString("Nama_Menu");
                    harga = rs.getInt("harga");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan di database.");
                    return;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat mengambil data menu: " + ex.getMessage());
            return;
        }

        int jumlahPesanan = 1;
        int totalHarga = harga * jumlahPesanan;

        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_order (id_Menu, id_Kasir, Jumlah_Pesanan, Tanggal_Pesanan, Total_Harga) VALUES (?, ?, ?, NOW(), ?)")) {
            pstmt.setInt(1, idMenu);
            pstmt.setInt(2, loggedInKasirId);
            pstmt.setInt(3, jumlahPesanan);
            pstmt.setInt(4, totalHarga);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil ditambahkan!");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pesanan ke database.");
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saat menyimpan pesanan: " + ex.getMessage());
            return;
        }

        // Muat ulang data di tabel Pesanan
        if (pesanan != null) {
            pesanan.loadDataFromDatabase();
            System.out.println("Data tabel diperbarui setelah menyimpan pesanan.");
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak aktif.");
        }
        System.out.println("loggedInKasirId saat menyimpan pesanan: " + loggedInKasirId);
    }//GEN-LAST:event_MilkshakeButtonActionPerformed

    private void rPanelfoodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rPanelfoodMouseClicked
        // TODO add your handling code here:
        jPanel3.removeAll();
        jPanel3.add(makanan);
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_rPanelfoodMouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        jPanel3.removeAll();
        jPanel3.add(makanan);
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void roundedPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roundedPanel4MouseClicked
        // TODO add your handling code here:
        jPanel3.removeAll();
        jPanel3.add(minuman);
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_roundedPanel4MouseClicked

    private void roundedPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roundedPanel5MouseClicked
        // TODO add your handling code here:
        jPanel3.removeAll();
        jPanel3.add(makanan);
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_roundedPanel5MouseClicked

    private void rPaneldrinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rPaneldrinkMouseClicked
        // TODO add your handling code here:
        jPanel3.removeAll();
        jPanel3.add(minuman);
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_rPaneldrinkMouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        jPanel3.removeAll();
        jPanel3.add(minuman);
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        jPanel3.removeAll();
        jPanel3.add(minuman);
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        // TODO add your handling code here:
        jPanel3.removeAll();
        jPanel3.add(makanan);
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_jLabel27MouseClicked

    private void dashblabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashblabMouseClicked
        // TODO add your handling code here:
        Pesanan pesanan = new Pesanan(loggedInKasirId);
        new Dashboard(loggedInKasirId, pesanan).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_dashblabMouseClicked

    private void pesanlabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesanlabMouseClicked
        // TODO add your handling code here:
        if (pesanan != null) {
            pesanan.setVisible(true); // Tampilkan halaman Pesanan yang sama
            this.dispose(); // Tutup halaman Dashboard
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak ditemukan.");
        }
    }//GEN-LAST:event_pesanlabMouseClicked

    private void riwlabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_riwlabMouseClicked
        // TODO add your handling code here:
        new Riwayat().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_riwlabMouseClicked

    private void pemblabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pemblabMouseClicked
        // TODO add your handling code here:
        new Pembayaran().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pemblabMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BaksoButton;
    private javax.swing.JButton ESkopiButton;
    private javax.swing.JButton GeprekButton;
    private javax.swing.JButton HotkopiButton;
    private javax.swing.JButton LemonSButton;
    private javax.swing.JButton LemonTButton;
    private javax.swing.JButton MieAButton;
    private javax.swing.JButton MilkshakeButton;
    private javax.swing.JButton NasdukButton;
    private javax.swing.JButton NasgorButton;
    private javax.swing.JButton SeblakButton;
    private javax.swing.JButton SqueOrangButton;
    private javax.swing.JLabel dashblab;
    private javax.swing.JLabel iconlab;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel makanan;
    private javax.swing.JPanel minuman;
    private javax.swing.JLabel pemblab;
    private javax.swing.JLabel pesanlab;
    private warna.RoundedPanel rPaneldrink;
    private warna.RoundedPanel rPanelfood;
    private javax.swing.JLabel riwlab;
    private warna.RoundedPanel roundedPanel1;
    private warna.RoundedPanel roundedPanel4;
    private warna.RoundedPanel roundedPanel5;
    // End of variables declaration//GEN-END:variables
}
