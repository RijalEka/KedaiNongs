/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import static Main.Dashboard.loggedInKasirId;
import Main.Pesanan;

import java.sql.*;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType0Font;
import pro.DatabaseConnection;
/**
 *
 * @author LENOVO
 */
public class Pembayaran extends javax.swing.JFrame {

    /**
     * Creates new form Pembayaran
     */
    private DefaultTableModel model2;    
         
    public Pembayaran() {
        initComponents();
        model2 = new DefaultTableModel();
        
        this.bayarTable.setModel(model2);
        model2.addColumn("ID Menu");
        model2.addColumn("Nama Menu");
        model2.addColumn("harga");
        model2.addColumn("Jumlah");
        model2.addColumn("Total");
    }
    
    public Pembayaran(DefaultTableModel pesananData, int totalHarga) {
        initComponents();

        // Isi tabel bayarTable dengan data pesanan
        DefaultTableModel bayarModel = (DefaultTableModel) bayarTable.getModel();
        for (int i = 0; i < pesananData.getRowCount(); i++) {
            bayarModel.addRow(new Object[]{
                pesananData.getValueAt(i, 0), // ID Menu
                pesananData.getValueAt(i, 1), // Nama Menu
                pesananData.getValueAt(i, 2), // Harga
                pesananData.getValueAt(i, 3), // Jumlah
                (int) pesananData.getValueAt(i, 2) * (int) pesananData.getValueAt(i, 3) // Total per item
            });
        }

        // Isi total harga di totalHtxt
        totalHtxt.setText(String.valueOf(totalHarga));

        // Isi tanggal dan waktu di tgltxt
        java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
        tgltxt.setText(java.time.LocalDateTime.now().format(formatter));
    }
            
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        roundedPanel1 = new warna.RoundedPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pembPanel = new javax.swing.JPanel();
        roundedPanel3 = new warna.RoundedPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bayarTable = new javax.swing.JTable();
        clearButton = new javax.swing.JButton();
        BayarButton = new javax.swing.JButton();
        PrintNotaPDF = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        pilihbayar = new javax.swing.JComboBox<>();
        kembalitxt = new javax.swing.JTextField();
        Bayartxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        totalHtxt = new javax.swing.JTextField();
        tgltxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(243, 202, 82));

        roundedPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo_2.png"))); // NOI18N

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Dashboard");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Pesanan");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(252, 82, 48));
        jLabel4.setText("Pembayaran");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Riwayat");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel1Layout = new javax.swing.GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(258, 258, 258)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addContainerGap(206, Short.MAX_VALUE))
        );
        roundedPanel1Layout.setVerticalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundedPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1))
                    .addGroup(roundedPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 150));

        jPanel3.setBackground(new java.awt.Color(243, 202, 82));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pembPanel.setBackground(new java.awt.Color(243, 202, 82));
        pembPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roundedPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(252, 82, 48));
        jLabel6.setText("Pembayaran");

        javax.swing.GroupLayout roundedPanel3Layout = new javax.swing.GroupLayout(roundedPanel3);
        roundedPanel3.setLayout(roundedPanel3Layout);
        roundedPanel3Layout.setHorizontalGroup(
            roundedPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel3Layout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(149, 149, 149))
        );
        roundedPanel3Layout.setVerticalGroup(
            roundedPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel3Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(15, 15, 15))
        );

        pembPanel.add(roundedPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 6, -1, -1));

        bayarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Menu", "Nama Menu", "Harga", "Jumlah", "Total"
            }
        ));
        jScrollPane1.setViewportView(bayarTable);

        pembPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 69, 892, 259));

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        pembPanel.add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 334, -1, -1));

        BayarButton.setBackground(new java.awt.Color(0, 255, 51));
        BayarButton.setForeground(new java.awt.Color(0, 0, 0));
        BayarButton.setText("Bayar");
        BayarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BayarButtonActionPerformed(evt);
            }
        });
        pembPanel.add(BayarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(683, 430, -1, 35));

        PrintNotaPDF.setText("Cetak Transaksi");
        PrintNotaPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintNotaPDFActionPerformed(evt);
            }
        });
        pembPanel.add(PrintNotaPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(814, 430, 138, 35));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Tanggal");
        pembPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, -1, -1));

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Pembayaran");
        pembPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, -1, -1));

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Kembalian");
        pembPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, -1, -1));

        pilihbayar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Transfer", " " }));
        pembPanel.add(pilihbayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, 120, -1));
        pembPanel.add(kembalitxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 248, -1));
        pembPanel.add(Bayartxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(704, 386, 248, -1));

        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Total Harga");
        pembPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 350, -1, -1));

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Bayar");
        pembPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 390, -1, -1));
        pembPanel.add(totalHtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(704, 348, 248, -1));
        pembPanel.add(tgltxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 250, -1));

        jPanel3.add(pembPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 530));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1000, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 675, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setSize(new java.awt.Dimension(1014, 682));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model2 = (DefaultTableModel) bayarTable.getModel();
        model2.setRowCount(0);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        Pesanan pesanan = new Pesanan(loggedInKasirId);
        new Dashboard(loggedInKasirId, pesanan).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        Pesanan pesanan = new Pesanan(loggedInKasirId);
        if (pesanan != null) {
            pesanan.setVisible(true); // Tampilkan halaman Pesanan yang sama
            this.dispose(); // Tutup halaman Dashboard
        } else {
            JOptionPane.showMessageDialog(this, "Halaman Pesanan tidak ditemukan.");
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        new Riwayat().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void BayarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BayarButtonActionPerformed
        // TODO add your handling code here:
        // Pastikan total harga tidak kosong
        String totalHargaStr = totalHtxt.getText();
        if (totalHargaStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Total harga tidak ditemukan!");
            return;
        }

        // Mengkonversi total harga dari string ke integer
        int totalHarga;
        try {
            totalHarga = Integer.parseInt(totalHargaStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Total harga harus berupa angka.");
            return;
        }

        // Ambil metode pembayaran dari JComboBox
        String metodePembayaran = (String) pilihbayar.getSelectedItem();

        // Ambil jumlah uang dari pengguna
        String jumlahUangStr = Bayartxt.getText();
        if (jumlahUangStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Masukkan jumlah uang pembayaran.");
            return;
        }

        int jumlahUang;
        try {
            jumlahUang = Integer.parseInt(jumlahUangStr);
            if (jumlahUang < totalHarga) {
                JOptionPane.showMessageDialog(this, "Jumlah uang tidak cukup untuk membayar.");
                return;
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Jumlah uang harus berupa angka.");
            return;
        }

        // Hitung kembalian
        int kembalian = jumlahUang - totalHarga;
        kembalitxt.setText(String.valueOf(kembalian));

        // Pastikan loggedInKasirId sudah terisi dengan benar
        if (loggedInKasirId <= 0) {
            JOptionPane.showMessageDialog(this, "ID Kasir tidak valid. Silakan login terlebih dahulu.");
            return;
        }

        // Siapkan tanggal transaksi dengan format yang sesuai
        java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String tanggalTransaksi = java.time.LocalDateTime.now().format(formatter);

        // Simpan transaksi ke database
        try (Connection conn = DatabaseConnection.koneksiDB();
             PreparedStatement pstmt = conn.prepareStatement(
                     "INSERT INTO tabel_transaksi (id_Kasir, Metode_Pembayaran, Tanggal_Transaksi, Jumlah_Uang, Kembalian) VALUES (?, ?, ?, ?, ?)",
                     Statement.RETURN_GENERATED_KEYS)) {

            pstmt.setInt(1, loggedInKasirId); // ID Kasir yang valid
            pstmt.setString(2, metodePembayaran);
            pstmt.setString(3, tanggalTransaksi);  // Format tanggal yang sesuai
            pstmt.setInt(4, jumlahUang);
            pstmt.setInt(5, kembalian);

            // Menjalankan query
            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                // Dapatkan ID Transaksi yang baru saja dimasukkan
                ResultSet generatedKeys = pstmt.getGeneratedKeys();
                if (generatedKeys.next()) {
                    int idTransaksi = generatedKeys.getInt(1);

                    // Tambahkan data ke tabel_riwayat
                    String insertRiwayatQuery = 
                            "INSERT INTO tabel_riwayat (id_Transaksi, Tanggal_Aktivitas, Aktivitas) VALUES (?, ?, ?)";
                    try (PreparedStatement riwayatStmt = conn.prepareStatement(insertRiwayatQuery)) {
                        riwayatStmt.setInt(1, idTransaksi); // ID Transaksi yang dihasilkan
                        riwayatStmt.setString(2, tanggalTransaksi); // Tanggal aktivitas
                        riwayatStmt.setString(3, "Pembayaran berhasil untuk ID Transaksi: " + idTransaksi);

                        int riwayatRows = riwayatStmt.executeUpdate();
                        if (riwayatRows > 0) {
                            JOptionPane.showMessageDialog(this, "Pembayaran dan riwayat berhasil disimpan!");
                        } else {
                            JOptionPane.showMessageDialog(this, "Gagal menyimpan riwayat transaksi.");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal mendapatkan ID Transaksi.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan transaksi ke database.");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_BayarButtonActionPerformed

    private void PrintNotaPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintNotaPDFActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        
        try {
            // Membuat dokumen PDF baru
            PDDocument document = new PDDocument();
            PDPage page = new PDPage(); 
            document.addPage(page);

            // Membuat konten stream untuk menulis ke halaman
            PDPageContentStream contentStream = new PDPageContentStream(document, page);

            // Menyiapkan font
            PDType0Font font = PDType0Font.load(document, new File("E:/Semester 4/Pemrograman berorientasi objek/tugas/Transaksi/Helvetica/Helvetica.ttf"));

            // Menulis header
            contentStream.setFont(font, 16);
            contentStream.beginText();
            contentStream.newLineAtOffset(20, 700);
            contentStream.showText("Nota Pembayaran Kedai Nongs");
            contentStream.endText();

            // Menulis detail pesanan
            int startX = 20;
            int startY = 660;
            int rowHeight = 20;
            int tableWidth = 500;
            int colWidth = tableWidth / 5; // Sesuaikan dengan jumlah kolom yang ada

            // Tulis header kolom
            contentStream.setNonStrokingColor(Color.BLACK);
            contentStream.setFont(font, 12);
            contentStream.beginText();
            contentStream.newLineAtOffset(startX, startY);
            contentStream.showText("ID Menu");
            contentStream.newLineAtOffset(colWidth, 0);
            contentStream.showText("Nama Menu");
            contentStream.newLineAtOffset(colWidth, 0);
            contentStream.showText("Harga");
            contentStream.newLineAtOffset(colWidth, 0);
            contentStream.showText("Jumlah");
            contentStream.newLineAtOffset(colWidth, 0);
            contentStream.showText("Total");
            contentStream.endText();

            // Menulis data tabel pesanan
            contentStream.setNonStrokingColor(Color.BLACK);
            for (int i = 0; i < bayarTable.getRowCount(); i++) {
                contentStream.beginText();
                contentStream.newLineAtOffset(startX, startY - (i + 1) * rowHeight);
                contentStream.showText(bayarTable.getValueAt(i, 0).toString()); // ID Menu
                contentStream.newLineAtOffset(colWidth, 0);
                contentStream.showText(bayarTable.getValueAt(i, 1).toString()); // Nama Menu
                contentStream.newLineAtOffset(colWidth, 0);
                contentStream.showText(bayarTable.getValueAt(i, 2).toString()); // Harga
                contentStream.newLineAtOffset(colWidth, 0);
                contentStream.showText(bayarTable.getValueAt(i, 3).toString()); // Jumlah
                contentStream.newLineAtOffset(colWidth, 0);
                contentStream.showText(bayarTable.getValueAt(i, 4).toString()); // Total
                contentStream.endText();
            }

            // Garis pemisah
            contentStream.setNonStrokingColor(Color.RED);
            contentStream.beginText();
            contentStream.newLineAtOffset(startX, startY - (bayarTable.getRowCount() + 1) * rowHeight);
            contentStream.showText("-----------------------------------------------------------------------------");
            contentStream.endText();

            // Menulis informasi transaksi
            contentStream.setFont(font, 12);
            contentStream.beginText();
            contentStream.newLineAtOffset(startX, startY - (bayarTable.getRowCount() + 2) * rowHeight);
            contentStream.showText("Tanggal Transaksi     : " + tgltxt.getText());
            contentStream.endText();

            contentStream.setFont(font, 12);
            contentStream.beginText();
            contentStream.newLineAtOffset(startX, startY - (bayarTable.getRowCount() + 3) * rowHeight);
            contentStream.showText("Total Harga                : " + totalHtxt.getText());
            contentStream.endText();

            contentStream.setFont(font, 12);
            contentStream.beginText();
            contentStream.newLineAtOffset(startX, startY - (bayarTable.getRowCount() + 4) * rowHeight);
            contentStream.showText("Bayar                          : " + Bayartxt.getText());
            contentStream.endText();

            contentStream.setFont(font, 12);
            contentStream.beginText();
            contentStream.newLineAtOffset(startX, startY - (bayarTable.getRowCount() + 5) * rowHeight);
            contentStream.showText("Kembalian                  : " + kembalitxt.getText());
            contentStream.endText();

            contentStream.setFont(font, 12);
            contentStream.beginText();
            contentStream.newLineAtOffset(startX, startY - (bayarTable.getRowCount() + 6) * rowHeight);
            contentStream.showText("Metode Pembayaran  : " + pilihbayar.getSelectedItem().toString());
            contentStream.endText();

            // Tutup content stream
            contentStream.close();

            // Tentukan nama file dan lokasi
            String fileName = "Nota_Kedai_Nongs_" + System.currentTimeMillis() + ".pdf";
            String filePath = System.getProperty("user.dir") + File.separator + fileName;

            // Simpan dokumen PDF
            document.save(filePath);

            // Tutup dokumen PDF
            document.close();

            // Notifikasi sukses
            JOptionPane.showMessageDialog(this, 
                "Nota berhasil dicetak!\nLokasi: " + filePath, 
                "Informasi", 
                JOptionPane.INFORMATION_MESSAGE);

        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat membuat Nota", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
        System.out.println("Direktori kerja saat ini: " + System.getProperty("user.dir"));
    }//GEN-LAST:event_PrintNotaPDFActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BayarButton;
    private javax.swing.JTextField Bayartxt;
    private javax.swing.JButton PrintNotaPDF;
    private javax.swing.JTable bayarTable;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kembalitxt;
    private javax.swing.JPanel pembPanel;
    private javax.swing.JComboBox<String> pilihbayar;
    private warna.RoundedPanel roundedPanel1;
    private warna.RoundedPanel roundedPanel3;
    private javax.swing.JTextField tgltxt;
    private javax.swing.JTextField totalHtxt;
    // End of variables declaration//GEN-END:variables
}
